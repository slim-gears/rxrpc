# suppress inspection "UnusedProperty" for whole file
# suppress inspection "WrongPropertyKeyValueDelimiter" for whole file

any = any
number = number
string = string
Map = Map

boolean = boolean
byte = number
short = number
int = number
long = number
float = number
double = number

java.lang.Boolean = boolean
java.lang.Byte = number
java.lang.Short = number
java.lang.Integer = number
java.lang.Long = number
java.lang.Float = number
java.lang.Double = number
java.lang.BigDecimal = number
java.lang.BigInteger = number

char = string
java.lang.String = string
java.lang.Character = string
java.lang.CharSequence = string
com.fasterxml.jackson.databind.JsonNode = any
java.lang.Object = any

void = void
java.lang.Void = void
java.util.Map<java.lang.String,V> = rxrpcJs.StringKeyMap<${V}>
java.util.Map<java.lang.Short,V> = rxrpcJs.NumberKeyMap<${V}>
java.util.Map<java.lang.Integer,V> = rxrpcJs.NumberKeyMap<${V}>
java.util.Map<java.lang.Long,V> = rxrpcJs.NumberKeyMap<${V}>
java.util.Map<java.lang.Float,V> = rxrpcJs.NumberKeyMap<${V}>
java.util.Map<java.lang.Double,V> = rxrpcJs.NumberKeyMap<${V}>
java.util.Map<K,V> = Map<${K},${V}>
java.util.Set<T> = ${T}[]
java.util.List<T> = ${T}[]
T[] = ${T}[]
java.util.Optional<T> = ${T}
com.google.common.collect.ImmutableList<T> = ${T}[]
com.google.common.collect.ImmutableMap<java.lang.String,V> = rxrpcJs.StringKeyMap<${V}>
com.google.common.collect.ImmutableMap<java.lang.Short,V> = rxrpcJs.NumberKeyMap<${V}>
com.google.common.collect.ImmutableMap<java.lang.Integer,V> = rxrpcJs.NumberKeyMap<${V}>
com.google.common.collect.ImmutableMap<java.lang.Long,V> = rxrpcJs.NumberKeyMap<${V}>
com.google.common.collect.ImmutableMap<java.lang.Float,V> = rxrpcJs.NumberKeyMap<${V}>
com.google.common.collect.ImmutableMap<java.lang.Double,V> = rxrpcJs.NumberKeyMap<${V}>
com.google.common.collect.ImmutableMap<K,V> = Map<${K},${V}>
com.google.common.collect.ImmutableSet<T> = ${T}[]
rx.ioreactivex.Observable<T> = rxjs.Observable<${T}>
rx.ioreactivex.Single<T> = rxjs.Observable<${T}>
rx.ioreactivex.Completable = rxjs.Observable<void>
